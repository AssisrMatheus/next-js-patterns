import { useQuery } from "@apollo/client";
import type { GetStaticProps, NextPage } from "next";
import { signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { graphql } from "../generated/gql";
import { addApolloState, initializeApollo } from "../lib/apollo";
import styles from "../styles/Home.module.css";

const LIST_USERS_QUERY = graphql(/* GraphQL */ `
  query ListUsers {
    users {
      id
      name
      email
    }
  }
`);

const Home: NextPage = () => {
  const { data: session } = useSession();
  const { loading, data } = useQuery(LIST_USERS_QUERY, {
    fetchPolicy: "cache-and-network",
  });

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <nav>
        {session?.user ? (
          <button type="button" onClick={() => signOut()}>
            Sign Out
          </button>
        ) : (
          <Link href="/auth/signin">
            <a>
              <button type="button">Sign In</button>
            </a>
          </Link>
        )}
      </nav>

      <main className={styles.main}>
        <h1 className={styles.title}>Users</h1>

        <div className={styles.grid}>
          {data?.users.map(({ id, name, email }) => (
            <a key={id} href="#" className={styles.card}>
              <h2>{name}</h2>
              <p>{email}</p>
            </a>
          ))}
        </div>
      </main>
    </div>
  );
};

export const getStaticProps: GetStaticProps = async ({}) => {
  const apolloClient = initializeApollo();

  await apolloClient.query({ query: LIST_USERS_QUERY });

  return addApolloState(apolloClient, {
    // Next.js will attempt to re-generate the page:
    // - When a request comes in
    // - At most once every X seconds
    revalidate: 5, // In seconds
  });
};

export default Home;
